<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Postgresql on 小wing的驿站</title>
    <link>https://xiaowing.github.io/tags/postgresql/</link>
    <description>Recent content in Postgresql on 小wing的驿站</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; Licensed under CC BY-NC-SA.</copyright>
    <lastBuildDate>Mon, 31 Dec 2018 14:19:05 +0800</lastBuildDate>
    
	<atom:link href="https://xiaowing.github.io/tags/postgresql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在MacOS Mojave上管中窥豹TimescaleDB</title>
      <link>https://xiaowing.github.io/post/20181231_a_peek_of_timescaledb_on_mojave/</link>
      <pubDate>Mon, 31 Dec 2018 14:19:05 +0800</pubDate>
      
      <guid>https://xiaowing.github.io/post/20181231_a_peek_of_timescaledb_on_mojave/</guid>
      <description>&lt;div class=&#34;pure-g&#34;&gt;

  
  
  
  
  &lt;div class=&#34;pure-u-1-3&#34;&gt;
    &lt;div style=&#34;padding: 0 .2em&#34;&gt;
      &lt;img
        class=&#34;pure-img-responsive&#34;
        src=&#34;https://xiaowing.github.io/img/post/timescale_logo.png&#34;
        alt=&#34;Logo of TimescaleDB&#34;&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  

&lt;/div&gt;


&lt;p&gt;年底换了工作, 因此未来一段时间的工作方向会集中在&lt;a href=&#34;https://en.wikipedia.org/wiki/Time_series_database&#34;&gt;时序数据库&lt;/a&gt;.然后恰逢今年9月,号称第一款基于PostgreSQL的时序数据库 &lt;a href=&#34;https://en.wikipedia.org/wiki/Time_series_database&#34;&gt;TimescaleDB&lt;/a&gt;正式推出了可用于生产环境的1.0版本。于是就赶快先试用了一把&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>双剑合璧——当PG的FDW遇上GO(之三)</title>
      <link>https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part03/</link>
      <pubDate>Sun, 13 May 2018 23:02:33 +0800</pubDate>
      
      <guid>https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part03/</guid>
      <description>&lt;p&gt;由于对Golang以及PostgreSQL(下文简称&lt;strong&gt;PG&lt;/strong&gt;)的FDW(&lt;em&gt;Foreign Data Wrapper&lt;/em&gt;)两个技术的双重喜爱,因此我利用假期用Golang实现了一个&lt;a href=&#34;https://github.com/xiaowing/douban_fdw&#34;&gt;访问douban API的FDW&lt;/a&gt;. 同时也借此机会总结了一下 PG的FDW技术并分享一下使用Golang实现FDW的一些经验。&lt;/p&gt;

&lt;p&gt;全文索引如下:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part01/&#34;&gt;第一部分: FDW的前世今生&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part02/&#34;&gt;第二部分: 揭秘FDW&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;第三部分: 如何用Go来实现一个FDW&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>双剑合璧——当PG的FDW遇上GO(之二)</title>
      <link>https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part02/</link>
      <pubDate>Sun, 13 May 2018 22:02:33 +0800</pubDate>
      
      <guid>https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part02/</guid>
      <description>&lt;p&gt;由于对Golang以及PostgreSQL(下文简称&lt;strong&gt;PG&lt;/strong&gt;)的FDW(&lt;em&gt;Foreign Data Wrapper&lt;/em&gt;)两个技术的双重喜爱,因此我利用假期用Golang实现了一个&lt;a href=&#34;https://github.com/xiaowing/douban_fdw&#34;&gt;访问douban API的FDW&lt;/a&gt;. 同时也借此机会总结了一下 PG的FDW技术并分享一下使用Golang实现FDW的一些经验。&lt;/p&gt;

&lt;p&gt;全文索引如下:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part01/&#34;&gt;第一部分: FDW的前世今生&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;第二部分: 揭秘FDW&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part03/&#34;&gt;第三部分: 如何用Go来实现一个FDW&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>双剑合璧——当PG的FDW遇上GO(之一)</title>
      <link>https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part01/</link>
      <pubDate>Sun, 13 May 2018 21:02:33 +0800</pubDate>
      
      <guid>https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part01/</guid>
      <description>&lt;p&gt;由于对Golang以及PostgreSQL(下文简称&lt;strong&gt;PG&lt;/strong&gt;)的FDW(&lt;em&gt;Foreign Data Wrapper&lt;/em&gt;)两个技术的双重喜爱, 因此我利用假期用Golang实现了一个&lt;a href=&#34;https://github.com/xiaowing/douban_fdw&#34;&gt;访问douban API的FDW&lt;/a&gt;. 同时也借此机会总结了一下 PG的FDW技术并分享一下使用Golang实现FDW的一些经验。&lt;/p&gt;



&lt;div class=&#34;pure-g&#34;&gt;

  
  
  
  
  &lt;div class=&#34;pure-u-1-1&#34;&gt;
    &lt;div style=&#34;padding: 0 .2em&#34;&gt;
      &lt;img
        class=&#34;pure-img-responsive&#34;
        src=&#34;https://xiaowing.github.io/img/post/20180513/fdw_metaphor.jpg&#34;
        alt=&#34;FDW Metaphor&#34;&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  

&lt;/div&gt;


&lt;p&gt;全文索引如下:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;第一部分: FDW的前世今生&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part02/&#34;&gt;第二部分: 揭秘FDW&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://xiaowing.github.io/post/20180513_write_pgfdw_in_golang_part03/&#34;&gt;第三部分: 如何用Go来实现一个FDW&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我所理解的事务隔离级别</title>
      <link>https://xiaowing.github.io/post/20180127_db_isolation_level/</link>
      <pubDate>Sat, 27 Jan 2018 21:08:20 +0800</pubDate>
      
      <guid>https://xiaowing.github.io/post/20180127_db_isolation_level/</guid>
      <description>&lt;p&gt;我发现有不少做应用的技术人员对于数据库的一些常识概念其实是理解不清的，这就导致了他们设计的应用中往往充斥了数据访问的相关错误却浑然不知。所以其实我还是比较乐意普及一些数据库常识的。&lt;/p&gt;

&lt;p&gt;本文就是我在 &lt;a href=&#34;https://about.segmentfault.com/?utm_source=sf-footer&amp;amp;utm_medium=footer-nav&amp;amp;utm_campaign=about&amp;amp;utm_content=about-index&amp;amp;utm_term=%E5%85%B3%E4%BA%8E%E6%88%91%E4%BB%AC&#34;&gt;&lt;em&gt;segmentfault.com&lt;/em&gt;&lt;/a&gt; 上对 &amp;ldquo;&lt;strong&gt;怎么理解SQL的四个事务隔离级别？&lt;/strong&gt;&amp;ldquo;&lt;a href=&#34;https://segmentfault.com/q/1010000012178278/a-1020000012661683&#34;&gt;这个问题的回答&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>揭秘PG —— 无处不在的OID</title>
      <link>https://xiaowing.github.io/post/20171117_pg_knowhow_oid/</link>
      <pubDate>Fri, 17 Nov 2017 23:08:31 +0800</pubDate>
      
      <guid>https://xiaowing.github.io/post/20171117_pg_knowhow_oid/</guid>
      <description>&lt;p&gt;由于手头当前的工作是基于PostgreSQL(以下简称&lt;strong&gt;PG&lt;/strong&gt;)做二次开发，因此目前对PG的源码也或多或少地读了一些，因此便想到了在博客里分享一些关于阅读PG源码所获得的KnowHow。&lt;/p&gt;

&lt;p&gt;在国内的PG技术圈内，提到PG源码解读自然首推武汉大学的两位彭老师所著的&lt;a href=&#34;https://book.douban.com/subject/6971366/&#34;&gt;《PostgreSQL数据库内核分析》&lt;/a&gt;。不过这本书的着眼点是对PG源码的整体架构，以及SQL引擎，存储系统，事务处理等等这些实现机制&amp;amp;算法的介绍，而我则主要想分享一些PG代码中的一些有意思的小细节/小功能。虽然只是PG那几百万行源码中的沧海一粟，不过从这些小细节中解读程序设计的匠心也是颇有意思的。&lt;/p&gt;



&lt;div class=&#34;pure-g&#34;&gt;

  
  
  
  
  &lt;div class=&#34;pure-u-1-1&#34;&gt;
    &lt;div style=&#34;padding: 0 .2em&#34;&gt;
      &lt;img
        class=&#34;pure-img-responsive&#34;
        src=&#34;https://xiaowing.github.io/img/post/PostgreSQL_logo_120x120.png&#34;
        alt=&#34;PostgreSQL Logo&#34;&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  

&lt;/div&gt;


&lt;p&gt;第一篇就从PG中无处不在的&lt;strong&gt;OID&lt;/strong&gt;开始吧&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何为PostgreSQL创建一个内置函数？</title>
      <link>https://xiaowing.github.io/post/20170903_howto_create_a_postgres_builtin_function/</link>
      <pubDate>Sun, 03 Sep 2017 22:59:31 +0800</pubDate>
      
      <guid>https://xiaowing.github.io/post/20170903_howto_create_a_postgres_builtin_function/</guid>
      <description>&lt;p&gt;这篇文章我已经酝酿颇久了，诱因是因为&lt;a href=&#34;https://www.pingcap.com/index-zh&#34;&gt;PingCAP&lt;/a&gt;团队为了推广他们的&lt;strong&gt;TiDB&lt;/strong&gt;而在知乎专栏发了一篇文章《&lt;a href=&#34;https://zhuanlan.zhihu.com/p/24870620&#34;&gt;TiDB 增加 MySQL 内建函数&lt;/a&gt;》。受此文启发，我在网上搜索了一下&lt;strong&gt;PostgreSQL&lt;/strong&gt;(&lt;em&gt;以下略称&amp;rdquo;PG&amp;rdquo;&lt;/em&gt;)中定制内置函数(&lt;em&gt;Built-in Function&lt;/em&gt;)相关的文章，果然没有搜到什么像样的中文文章。其实为PG添加内置函数并不难，可能是相对于hacking它的SQL引擎或者存储引擎等等话题而言，加一个内置函数的逼格实在是太Low吧。不过TiDB这个诞生还没多久的数据库产品都知道通过先利用内置函数这个话题来由简入深地吸引广大开发者为它贡献代码，PG作为一个诞生了已有20年的开源数据库老大哥却没有一篇像样文章，也难怪PG的普及率不高了。&lt;/p&gt;

&lt;p&gt;以上就作为这篇分享的「意味づけ」吧&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>